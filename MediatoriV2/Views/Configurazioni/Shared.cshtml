@model mediatori.Models.Configurazione.ConfigurazioneModel
@{
    ViewBag.Title = Model.nomeEntita;
    Layout = "~/Views/Shared/_LayoutMobile.cshtml";

    int conta = 0;
    string css;
}


<script type="text/javascript">

    function editItem(id, descrizione) {
        //alert("editItem" + id + " - " + descrizione);

        $("#popupNuovoTitolo").text("Modifica");
        $("#edit_item_id").val(id);
        $("#edit_item_descrizione").val(descrizione);
        $("#popupNuovo").popup("open");
    }
        
    function newItem() {
       // alert("newItem");

        $("#popupNuovoTitolo").text("Nuovo");
        $("#edit_item_id").val(0);
        $("#edit_item_descrizione").val('');
        $("#popupNuovo").popup("open");
    }

    function deleteItem(id) {
        $("#delete_item_id").val(id);
        $("#popupConfirmDelete").popup("open");
    }
</script>

<h1>Configurazione @Model.nomeEntita</h1>

<a href="javascript:newItem();" data-rel="popup" data-position-to="window" class="ui-btn ui-corner-all ui-shadow ui-mini ui-btn-inline ui-icon-plus ui-btn-icon-left">Nuovo</a>

<table class="MyTable ui-responsive" data-role="table" data-mode="reflow">
    <thead>
        <tr class="@MyConstants.TABLE_HEADER_STYLE">
            <th>Id</th>
            <th>Descrizione</th>
            <th>Modifica</th>
            <th>Cancella</th>
        </tr>
    </thead>
    <tbody>
        @foreach (mediatori.Models.Configurazione.EntitaModel item in Model.listaEntita)
        {
            conta++;
            if (conta % 2 == 0)
            {
                css = MyConstants.TABLE_ROW_STYLE;
            }
            else
            {
                css = MyConstants.TABLE_ALTERNATING_ROW_STYLE;
            }

            <tr class="@css">
                <td>@item.id</td>
                <td>@item.descrizione</td>
                <td>
                    <a class="ui-btn-inline ui-btn ui-icon-edit ui-btn-icon-notext ui-corner-all" title="Modifica" href="javascript:editItem(@item.id,'@item.descrizione.Replace("'","\\'")')">Modifica</a>
                </td>
                <td>
                    <a class="ui-btn-inline ui-btn ui-icon-delete ui-btn-icon-notext ui-corner-all" title="Cancella" href="javascript:deleteItem(@item.id);">Cancella</a>
                </td>
            </tr>
        }
    </tbody>
</table>


@{Html.RenderPartial("_footer");}



<div data-role="popup" id="popupNuovo" data-overlay-theme="b" data-theme="a" data-dismissible="false" style="min-width:500px">
    <div data-role="header" data-theme="a">
        <h1 id="popupNuovoTitolo">Nuovo</h1>
    </div>
    <div role="main" class="ui-content">
        @using (Html.BeginForm(Model.nomeEntita.Replace(" ",""), "Configurazioni", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            
            <input type="hidden" id="edit_item_id" name="id" value="0" />

            <div class="ui-field-contain">
                <label for="descrizione">Descrizione *</label>
                <input type="text" name="descrizione" required id="edit_item_descrizione">
            </div>

            <a href="#" data-rel="back" class="ui-btn ui-corner-all ui-shadow ui-btn-inline ui-btn-b ui-mini">Annulla</a>
            <input type="submit" value="Conferma" data-inline="true" data-mini="true" />
        }
    </div>
</div>


@{
    mediatori.Models.PopupConfirmDeleteModel popupModel = new mediatori.Models.PopupConfirmDeleteModel();
    popupModel.actionName = Model.nomeEntita.Replace(" ","")  + "Delete";
    popupModel.controllerName = "Configurazioni";
    popupModel.hiddenFields.Add(new mediatori.Models.HiddenFiled() { id = "delete_item_id", name = "id", value = "" });

    Html.RenderPartial("_PopupConfirmDelete", popupModel);
}
