@model mediatori.Models.StatoModel
@{
    ViewBag.Title = "Gestione Stati Lavorazione";

    int conta = 0;
    string css;
}
<h2>Gestione stati</h2>

@Html.Partial("commonConfigurazioni")

<script type="text/javascript">

    function editStato(id, gruppoId, descrizione, statoBase, entitaId) {
        // alert("editStato" + statoBase);
        $("#stato_id").val(id);
        $("#stato_descrizione").val(descrizione);
        $("#stato_statoBase").val(statoBase).change();
        $("#stato_gruppoId").val(gruppoId).change();
        $("#stato_entitaAssociata").val(entitaId).change();

        $("#popupStato").popup("open");
    }

    function deleteStato(id) {

        //$("#linkDelete").attr("href", "@Url.Action("CancellaStato","Configurazioni")/" + id);

        $("#stato_delete_id").val(id);

        $("#popupDialog").popup("open");
    }
</script>


<a href="#popupStato" data-rel="popup" data-position-to="window" class="ui-btn ui-corner-all ui-shadow ui-mini ui-btn-inline ui-icon-plus ui-btn-icon-left">Nuovo stato</a>


@if (Model.listaStati != null)
{
    <fieldset>
        <legend>Lista Stati configurati</legend>
        <table class="MyTable">
            <tr class="ui-bar-b">
                <th>Descrizione</th>
                <th>Associato A</th>
                <th>Stato base</th>
                <th>Gruppo Lavorazione</th>
                <th></th>
                <th></th>
            </tr>
            @foreach (mediatori.Models.etc.Stato stato in Model.listaStati)
            {
                conta++;
                if (conta % 2 == 0)
                {
                    css = "ui-bar-d";
                }
                else
                {
                    css = "ui-bar-a";
                }

                <tr class="@css">
                    <td>@stato.descrizione</td>
                    <td>@stato.entitaAssociata.ToString()</td>
                    <td>@stato.statoBase.ToString()</td>
                    <td>
                        @if (stato.gruppo != null)
                        {
                            <a href="@Url.Action("Details", "Groups", new { id = stato.gruppo.gruppoId})">@stato.gruppo.nome</a>
                        }
                        else
                        {
                            @:N/A
                        }
                    </td>
                    <td>
                        <a class="ui-btn-inline ui-btn ui-icon-edit ui-btn-icon-notext ui-corner-all" title="Modifica" href="javascript:editStato(@stato.id, @(stato.gruppo == null?-1:stato.gruppo.gruppoId),'@stato.descrizione',@((int)stato.statoBase), @((int)stato.entitaAssociata) );">Modifica</a>
                    </td>
                    <td>
                        <a class="ui-btn-inline ui-btn ui-icon-delete ui-btn-icon-notext ui-corner-all" title="Cancella" href="javascript:deleteStato(@stato.id);">Cancella</a>
                    </td>
                </tr>
            }
        </table>
    </fieldset>
}


<div data-role="popup" id="popupStato" data-overlay-theme="b" data-theme="a" data-dismissible="false" style="min-width:500px">
    <div data-role="header" data-theme="a">
        <h1>Stato</h1>
    </div>
    <div role="main" class="ui-content">
        @using (Html.BeginForm("Stato", "Configurazioni", FormMethod.Post, null))
        {
            <input type="hidden" id="stato_id" name="stato.id" value="0" />

            <div class="ui-field-contain">
                <label for="stato_descrizione">Descrizione</label>
                <input type="text" name="stato.descrizione" required id="stato_descrizione">
            </div>

            <div class="ui-field-contain">
                <label for="stato_statoBase">Stato base</label>
                @MyHelper.getComboEnum(default(mediatori.Models.EnumStatoBase), "", "stato.statoBase", true)
            </div>

            <div class="ui-field-contain">
                <label for="stato_entitaAssociata">Entità associata</label>
                @MyHelper.getComboEnum(default(mediatori.Models.etc.EnumEntitaAssociataStato), "", "stato.entitaAssociata", true)
            </div>

            <div class="ui-field-contain">
                <label for="stato_gruppoId">Gruppo lavorazione</label>
                <select name="stato.gruppoId" id="stato_gruppoId" data-mini="true">
                    <option value="">---</option>
                    @foreach (MyUsers.Models.MyGroup g in Model.listaGruppi)
                    {
                        <option value="@g.gruppoId">@g.nome</option>
                    }
                </select>
            </div>

            <a href="#" data-rel="back" class="ui-btn ui-corner-all ui-shadow ui-btn-inline ui-btn-b ui-mini">Annulla</a>
            <input type="submit" value="Conferma" data-inline="true" data-mini="true" />
        }
    </div>
</div>




<div data-role="popup" id="popupDialog" data-overlay-theme="b" data-theme="b" data-dismissible="false" style="max-width:400px;">
    <div data-role="header" data-theme="a">
        <h1>Cancellazione?</h1>
    </div>
    <div role="main" class="ui-content">
        <h3 class="ui-title">Confermare l'operazione di cancellazione?</h3>
        <p>Questa operazione è irreversibile.</p>

        @using (Html.BeginForm("CancellaStato", "Configurazioni", FormMethod.Post, null))
        {
            <input type="hidden" id="stato_delete_id" name="id" value="0" />
            
            <a href="#" class="ui-btn ui-corner-all ui-shadow ui-btn-inline ui-btn-b ui-mini" data-rel="back">Annulla</a>
            <input type="submit" value="Cancella" data-inline="true" data-mini="true" />
        }

    </div>
</div>