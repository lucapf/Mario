@model mediatori.Models.Segnalazione.SegnalazioneCreateModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutMobile.cshtml";
}


<h2>Nuova segnalazione</h2>
@using (Html.BeginForm("Create", "Segnalazioni", FormMethod.Post, new { @id = "createForm" }))
{
    Html.ValidationSummary(true);

    <h3>Dati anagrafici</h3>
    <hr />

    if (Model.contatto.id == 0)
    {
        Html.RenderAction("Create", "Contatto", new { contatto = Model.contatto });
    }
    else
    {
        <input type="hidden" name="contatto.id" value="@Model.contatto.id" />
        { Html.RenderPartial("~/Views/Contatto/ContattoPartialDetail.cshtml", Model.contatto); }
    }


     <!-- impiego -->
    if (Model.contatto.id == 0)
    {
        <h3>Dati impiego</h3>
        <hr />
        if (Model.impiego != null)
        {
            { Html.RenderAction("Create", "Impiego", new { impiego = Model.impiego }); }
        }
    }
    else
    {
        Html.RenderAction("Details", "Impiego", new { contattoId = Model.contatto.id, edit = false });
    }

    <!-- /impiego -->

    <h3>Importi</h3>
    <hr />
    <div class="editor-control">
        @Html.MyInputType(p => p.segnalazione.importoRichiesto)
    </div>


    <div class="editor-control">
        <div class="editor-row">
            <div class="editor-label">
                <label>Numero rate*</label>
            </div>
            <div class="editor-value">
                <select name="segnalazione.durataRichiesta" id="segnalazione_durataRichiesta" data-mini="true" data-inline="true" data-val-required="Il campo Numero rate è obbligatorio." data-val="true">
                    <option value="" @((Model.segnalazione.durataRichiesta == null) ? "selected" : "")>---</option>
                    <option value="12" @((Model.segnalazione.durataRichiesta == 12) ? "selected" : "")>12</option>
                    <option value="24" @((Model.segnalazione.durataRichiesta == 24) ? "selected" : "")>24</option>
                    <option value="36" @((Model.segnalazione.durataRichiesta == 36) ? "selected" : "")>36</option>
                    <option value="48" @((Model.segnalazione.durataRichiesta == 48) ? "selected" : "")>48</option>
                    <option value="60" @((Model.segnalazione.durataRichiesta == 60) ? "selected" : "")>60</option>
                    <option value="72" @((Model.segnalazione.durataRichiesta == 72) ? "selected" : "")>72</option>
                    <option value="84" @((Model.segnalazione.durataRichiesta == 84) ? "selected" : "")>84</option>
                    <option value="96" @((Model.segnalazione.durataRichiesta == 96) ? "selected" : "")>96</option>
                    <option value="108" @((Model.segnalazione.durataRichiesta == 108) ? "selected" : "")>108</option>
                    <option value="120" @((Model.segnalazione.durataRichiesta == 120) ? "selected" : "")>120</option>
                </select>
            </div>
        </div>
        <div class="editor-validation">
            <span class="field-validation-valid" data-valmsg-for="segnalazione.durataRichiesta" data-valmsg-replace="true"></span>
        </div>
    </div>


    <div class="editor-control">
        @Html.MyInputType(p => p.segnalazione.rataRichiesta)
    </div>


    <div class="editor-control">
        <div class="editor-row">
            <div class="editor-label">
                @Html.MyLabelFor(m => m.segnalazione.altroPrestito)
            </div>
            <div class="editor-value">
                @Html.DropDownListFor(m => m.segnalazione.altroPrestito.id, (IEnumerable<SelectListItem>)ViewBag.listaTipoPrestito, "", new { data_mini = "true" })
            </div>
        </div>
        <div class="editor-validation">
            @Html.ValidationMessageFor(m => m.segnalazione.altroPrestito.id)
        </div>
    </div>


    <div class="editor-control">
        <div class="editor-row">
            <div class="editor-label">
                @Html.MyLabelFor(m => m.segnalazione.prodottoRichiesto)
            </div>
            <div class="editor-value">
                @Html.DropDownListFor(m => m.segnalazione.prodottoRichiesto.id, (IEnumerable<SelectListItem>)ViewBag.listaProdotti, "", new { data_mini = "true" })
            </div>
        </div>
        <div class="editor-validation">
            @Html.ValidationMessageFor(m => m.segnalazione.prodottoRichiesto.id)
        </div>
    </div>




    <h3>Dati Campagna</h3>
    <hr />

    <div class="editor-control">
        <div class="editor-row">
            <div class="editor-label">
                @Html.MyLabelFor(m => m.segnalazione.fontePubblicitaria, true)
            </div>
            <div class="editor-value">
                @Html.DropDownListFor(m => m.segnalazione.fontePubblicitaria.id, (IEnumerable<SelectListItem>)ViewBag.listaFontePubblicitaria, "", new { data_mini = "true" })
            </div>
        </div>
        <div class="editor-validation">
            @Html.ValidationMessageFor(m => m.segnalazione.fontePubblicitaria.id)
        </div>
    </div>

    <div class="editor-control">
        <div class="editor-row">
            <div class="editor-label">
                @Html.MyLabelFor(m => m.segnalazione.canaleAcquisizione, true)
            </div>
            <div class="editor-value">
                @Html.DropDownListFor(m => m.segnalazione.canaleAcquisizione.id, (IEnumerable<SelectListItem>)ViewBag.listaTipoCanaleAcquisizione, "", new { data_mini = "true" })
            </div>
        </div>
        <div class="editor-validation">
            @Html.ValidationMessageFor(m => m.segnalazione.canaleAcquisizione.id)
        </div>
    </div>


    <div class="editor-control">
        <div class="editor-row">
            <div class="editor-label">
                @Html.MyLabelFor(m => m.segnalazione.tipoLuogoRitrovo, true)
            </div>
            <div class="editor-value">
                @Html.DropDownListFor(m => m.segnalazione.tipoLuogoRitrovo.id, (IEnumerable<SelectListItem>)ViewBag.listaTipoLuogoRitrovo, "", new { data_mini = "true" })
            </div>
        </div>
        <div class="editor-validation">
            @Html.ValidationMessageFor(m => m.segnalazione.tipoLuogoRitrovo.id)
        </div>
    </div>


    <div class="editor-control">
        <div class="editor-row">
            <div class="editor-label">
                @Html.MyLabelFor(m => m.segnalazione.tipoContatto, true)
            </div>
            <div class="editor-value">
                @Html.DropDownListFor(m => m.segnalazione.tipoContatto.id, (IEnumerable<SelectListItem>)ViewBag.listaTipoContatto, "", new { data_mini = "true" })
            </div>
        </div>
        <div class="editor-validation">
            @Html.ValidationMessageFor(m => m.segnalazione.tipoContatto.id)
        </div>
    </div>



    if (Model.contatto.id == 0)
    {
        <h3>Riferimenti</h3>
        <hr />

        if (Model.riferimento != null)
        {
            { Html.RenderAction("Create", "Riferimento", new { riferimento = Model.riferimento }); }
        }
    }
    else
    {
        Html.RenderAction("Details", "Riferimento", new { contattoId = Model.contatto.id, edit = false });
    }

    <h3>Privacy</h3>
    <hr />

    for (int i = 0; i < Model.consensoPrivacy.Count; i++)
    {


        <div class="editor-control">
            <div class="editor-row">
                <div class="editor-label">
                    @Html.Label(Model.consensoPrivacy[i].tipoConsensoPrivacy.descrizione)
                    @Html.HiddenFor(m => m.consensoPrivacy[i].tipoConsensoPrivacy.id)
                </div>
            </div>
        </div>

        <div class="editor-control">
            <div class="editor-row">
                <div class="editor-label">
                    @Html.MyLabelFor(m => m.consensoPrivacy[i].acconsento)
                </div>
                <div class="editor-value">
                    @Html.RadioButtonFor(m => m.consensoPrivacy[i].acconsento, false)
                </div>
            </div>
        </div>

        <div class="editor-control">
            <div class="editor-row">
                <div class="editor-label">
                    @Html.MyLabelFor(m => m.consensoPrivacy[i].acconsento)
                </div>
                <div class="editor-value">
                    @Html.RadioButtonFor(m => m.consensoPrivacy[i].acconsento, true)
                </div>
            </div>
            <div class="editor-validation">
                @Html.ValidationMessageFor(m => m.consensoPrivacy[i].acconsento)
            </div>
        </div>
    }

        <h3>Note</h3>
        <hr />
        if (Model.nota != null)
        {
        Html.RenderPartial("~/Views/Nota/NotaPartialEdit.cshtml", Model.nota);
        }


        <div data-role="footer" data-position="fixed" data-theme="b">
            <div data-role="navbar">
                <ul>
                    <li><a href="@Url.Action("Index")" class="ui-btn-inline ui-btn ui-corner-all ui-mini">Annulla</a></li>
                    <li><input type="submit" value="Salva" id="Nuovo" data-inline="true" data-mini="true" /></li>
                </ul>
            </div>
        </div>
        }




