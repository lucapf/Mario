@model mediatori.Models.DocumentaleModel
@{
    Layout = null;

    int MyId = 0;
    if (Model.segnalazioneId != null)
    {
        MyId = (int)Model.segnalazioneId;
    }

    if (Model.praticaId != null)
    {

        MyId = (int)Model.praticaId;
    }
}

<script type="text/javascript">
    $(document).on("pageinit", function () {

        $("#linkNuovoDocumento").click(function () {
            //initIndirizzoPartialEdit();
            $("#divNuovoDocumento").show();
        })

    });
</script>
<script type="text/javascript" src="@Url.Content("~/Content/js/jquery.form.js")"></script>

<h3>Documenti <strong class="h3Link" id="linkNuovoDocumento" title="Nuovo documento">[ + ]</strong></h3>
<hr />
<div id="divNuovoDocumento" style="display: none">
    @using (Html.BeginForm("Add", "Documentale", FormMethod.Post, new { id = "MyFormUpload", enctype = "multipart/form-data" }))
    {
        <input type="hidden" name="segnalazioneId" value="@MyId" />

        <div class="editor-control">
            <div class="editor-row">
                <div class="editor-label">
                    File:
                </div>
                <div class="editor-value">
                    <input type="file" name="MyFile" id="MyFile" data-inline="true" value="">
                </div>
            </div>
            <div class="editor-validation">
                <span style="color: red; visibility: hidden;" id="MyResponseMessage">messaggio</span>
            </div>
        </div>


        <div class="editor-control">
            <div class="editor-row">
                <div class="editor-label">
                    Tipo documento:
                </div>
                <div class="editor-value">
                    <select name="tipoDocumentoId" id="tipoDocumentoId" required="required" data-mini="true">
                        <option value="" selected="selected">---</option>
                        @foreach (mediatori.Models.Anagrafiche.TipoDocumento tipo in Model.tipoDocumento)
                        {
                            <option value="@tipo.id">@tipo.descrizione</option>
                        }
                    </select>
                </div>
            </div>
            <div class="editor-validation">

            </div>
        </div>

        <div class="editor-control">
            <div class="editor-row">
                <div class="editor-label">
                    Descrizione:
                </div>
                <div class="editor-value">
                    <input type="text" name="descrizione" />
                </div>
            </div>
            <div class="editor-validation">

            </div>
        </div>

        <div id="percent"></div>
        <div data-role="controlgrup" data-type="horizontal">
            <input type="button" data-mini="true" data-inline="true" value="Upload" onclick="javascript: MyAsyncUpload();" />
            <input type="button" data-mini="true" data-inline="true" value="Annulla" onclick='$("#divNuovoDocumento").hide()' />

            
        </div>
    }
</div>

<div id="AttachmentList">
    @{Html.RenderAction("List", "Documentale", new { id = MyId });}
</div>

<!--
<input type="button" data-mini="true" data-inline="true" value="Refresh" onclick="javascript: MyAsyncUpdate();" />
-->

<script type="text/javascript">
    function MyAsyncUpload() {

        //alert("MyAsyncUpload");

        var options = {
            beforeSend: function () {
                //alert("beforeSend");
                $('#percent').html("");
                $("#MyResponseMessage").css('visibility', 'hidden');
            },
            uploadProgress: function (event, position, total, percentComplete) {
                $('#percent').html(percentComplete + "%");
            },
            success: function () {
                //alert("success");
            },
            complete: function (response) {
                //response text from the server.
                //alert("complete");
                var obj = JSON.parse(response.responseText);

                $("#MyFile").val("");


                //alert("esito: " + obj.esito + " Messaggio: " + obj.messaggio);

                if (obj.esito == 0) {
                    //FAILED
                    $("#MyResponseMessage").html(obj.messaggio);
                    $("#MyResponseMessage").css('visibility', 'visible');
                    $('#percent').html("");
                } else {
                    //SUCCESS
                    $("#divNuovoDocumento").hide();
                    MyAsyncUpdate();
                    $('#percent').html("100%");
                }

            }
        };


        /*
        $("#MyFormUpload").validate({
            submitHandler: function (form) {
                alert("isValid");
                //$('#MyFormUpload').ajaxForm(options);
                //$('#MyFormUpload').submit();
                $(form).ajaxForm(options);
                $(form).submit();
            }
        });*/


        $("#MyFormUpload").validate();
        $('#MyFormUpload').ajaxForm(options);
        $('#MyFormUpload').submit();
    }


    function MyAsyncDelete(docId) {
        var r = confirm("Confermare la cancellazione del documento?");
        if (r == false) {
            return;
        }

       

        $.get('@Url.Action("Delete", "Documentale")/' + docId, function (response) {
            //alert("success");
            if (response.esito == 1) {
                MyAsyncUpdate();
            }
            else {
                //FAILED
                alert(response.messaggio);
            }
        });
    }



    function MyAsyncUpdate() {
        //alert("MyAsyncUpdate");

        $.get('@Url.Action("List", "Documentale", new {id = MyId })', function (data) {
            //alert("MyAsyncUpdate " + data);
            $('#AttachmentList').html(data);
            $('#AttachmentList').trigger('create');
        });
    }

</script>