@model mediatori.Models.ManageModel

@{
    ViewBag.Title = "Manage";

    if (TempData["AREA"] == "Mobile" || (HttpContext.Current.Request.RequestContext.RouteData.DataTokens["area"] != null && HttpContext.Current.Request.RequestContext.RouteData.DataTokens["area"].ToString() == "Mobile"))
    {
        Layout = "~/Areas/Mobile/Views/Shared/MasterPageMobile.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_LayoutMobile.cshtml";
    }

    mediatori.SessionData sessionData = (Session["MySessionData"] as mediatori.SessionData);

    string profilo;
    profilo = sessionData.Profili.Replace(";", " - ");

    if (profilo.EndsWith(" - "))
    {
        profilo = profilo.Substring(0, profilo.Length - 3);
    }
}



<div data-role="navbar" data-iconpos="right" data-theme="a">
    <ul>
        <li><a href="@Url.Action("ChangeEmail", "Account" )" class="ui-btn-icon-right ui-icon-mail">Modifica email</a></li>
        <li><a href="@Url.Action("ChangePassword", "Account" )" class="ui-btn-icon-right ui-icon-edit">Aggiorna password</a></li>
    </ul>
</div>


@if (User.Identity is MyUsers.MyCustomIdentity || User.Identity is System.Web.Security.FormsIdentity)
{
    <a style="float:right; margin-top:20px;" href="@Url.Action("LogOff", "Account")" class="ui-btn-inline ui-btn ui-corner-all ui-mini">Logoff</a>
}

@if (1 == 2)
{
    <a style="float:right; margin-top:20px;" href="@Url.Action("Refresh", "Account")" class="ui-btn-inline ui-btn ui-corner-all ui-mini">Refresh Data</a>
}

<h2>My Account</h2>
<p>Benvenuto, @Model.NomeCognome</p>

@if (Model.datePreviousLogin != null)
{
    <p>
        il tuo ultimo accesso è del @Model.datePreviousLogin.Value.ToShortDateString() alle ore @Model.datePreviousLogin.Value.ToShortTimeString()
    </p>
}

<div class="ui-grid-a">
    <div class="ui-block-a">
        <div class="ui-bar ui-bar-a">Login</div>
        <div class="ui-bar ui-bar-a">Email</div>
        <div class="ui-bar ui-bar-a">Profilo</div>
    </div>

    <div class="ui-block-b">
        <div class="ui-bar ui-body-a">@User.Identity.Name</div>
        <div class="ui-bar ui-body-a">@MyHelper.decodeNull(sessionData.Email)</div>
        <div class="ui-bar ui-body-a">@MyHelper.decodeNull(profilo)</div>
    </div>
</div>



<h2>Gruppi</h2>

@if (sessionData.Groups == null || sessionData.Groups.Count == 0)
{
    <h3>Nessun gruppo configurato</h3>
}
else
{
    <ol data-role="listview" data-inset="true">
        @foreach (MyManagerCSharp.Models.MyGroupSmall g in sessionData.Groups)
        {
            <li data-icon="false"><a href="#">@g.nome</a></li>
        }

    </ol>
}


<br />
<h2>Account per CreditoLab</h2>
<hr />

@if (sessionData.CredenzialiCreditoLab == null)
{
    <h3>Nessun account configurato</h3>

    <p>
        Clicca qui per configurare un account per il servizio di CreditoLab
        <a href="#MyPopup" data-rel="popup" data-position-to="window" class="ui-btn ui-corner-all ui-shadow ui-mini ui-btn-inline ui-icon-plus ui-btn-icon-left">Configura</a>
    </p>
}
else
{
    <div class="ui-grid-a">
        <div class="ui-block-a">
            <div class="ui-bar ui-bar-a">Login</div>
            <div class="ui-bar ui-bar-a">Password</div>
        </div>

        <div class="ui-block-b">
            <div class="ui-bar ui-body-a">@sessionData.CredenzialiCreditoLab.Login</div>
            <div class="ui-bar ui-body-a">***********</div>
        </div>
    </div>

    <button value="Test" data-inline="true" data-mini="true" title="@sessionData.Istituto.url" onclick="testCredenziali()">Verifica</button>

    @MyJQueryMobile.MyAnchorPopup("#popupConfirmDelete", "Elimina", MyJQueryMobile.IconType.delete);
}





<div data-role="popup" id="MyPopup" data-overlay-theme="b" data-theme="a" data-dismissible="false" style="max-width:400px;">
    <div data-role="header" data-theme="a">
        <h1>Account CreditoLab</h1>
    </div>
    <div role="main" class="ui-content">
        @using (Html.BeginForm("CreditoLab", "Account", FormMethod.Post, null))
        {
            <div class="ui-field-contain">
                <label for="Login">Login</label>
                <input type="text" name="Login" id="Login" data-clear-btn="true" data-mini="true" value="@Model.Login" required>
                <span data-valmsg-replace="true" data-valmsg-for="Login" class="field-validation-valid"></span>
            </div>

            <div class="ui-field-contain">
                <label for="Password">Password</label>
                <input type="password" name="Password" id="Password" data-clear-btn="true" data-mini="true" value="@Model.Password" required>
                <span data-valmsg-replace="true" data-valmsg-for="Password" class="field-validation-valid"></span>
            </div>

            <div class="ui-field-contain">
                <label for="PasswordConfirm">Conferma password</label>
                <input type="password" name="PasswordConfirm" id="PasswordConfirm" data-clear-btn="true" data-mini="true" required
                       data-val="true" data-val-equalto="La password di conferma non corrisponde" data-val-equalto-other="*.Password">
                <span data-valmsg-replace="true" data-valmsg-for="PasswordConfirm" class="field-validation-valid"></span>
            </div>

            <div data-role="controlgrup" data-type="horizontal">
                <a href="#" class="ui-btn ui-corner-all ui-shadow ui-btn-inline ui-btn-b ui-mini" data-rel="back">Annulla</a>
                <button value="Test" data-inline="true" data-mini="true" onclick="testCredenziali()">Verifica</button>
                <input type="submit" value="Configura" data-inline="true" data-mini="true" />
            </div>
        }
    </div>
</div>


@{Html.RenderPartial("_PopupConfirmDelete", new mediatori.Models.PopupConfirmDeleteModel() { actionName = "CreditoLabDelete", controllerName = "Account" });}

<script type="text/javascript">
    function testCredenziali() {
        alert("Operazione non ancora implementata");
    }
</script>