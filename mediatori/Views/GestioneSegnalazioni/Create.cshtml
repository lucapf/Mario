@model mediatori.Models.Anagrafiche.SegnalazioneCreate

@{
   
    ViewBag.Title = "Create";
}

<h2>Nuova Segnalazione</h2>
<script>
    $(function () {
        $("#dataNascita").datepicker({ dateFormat: "yy-mm-dd", changeYear: true, yearRange: "1940:2012" });
    });
</script>
@using (Html.BeginForm("Create", "GestioneSegnalazioni", FormMethod.Post, new { @id = "createForm" }))
{
    Html.ValidationSummary(true);
    Html.HiddenFor(model => model.segnalazione.contatto.id);
    <h3>Dati anagrafici</h3><hr />
    <div class="editor-label">
        @Html.LabelFor(model => model.segnalazione.contatto.nome)
        @Html.EditorFor(model => model.segnalazione.contatto.nome)<br />
        @Html.ValidationMessageFor(model => model.segnalazione.contatto.nome)
      @Html.HiddenFor(model => model.segnalazione.contatto.id)
    </div>
    <script>
        $("#segnalazione_contatto_nome").focusout(function () {
            ricercaContatto();
        });
    </script>
    <div class="editor-label">
        @Html.LabelFor(model => model.segnalazione.contatto.cognome)
        @Html.EditorFor(model => model.segnalazione.contatto.cognome)<br />
        @Html.ValidationMessageFor(model => model.segnalazione.contatto.cognome)
    </div>
    <script>
        $("#segnalazione_contatto_cognome").focusout(function () {
            ricercaContatto();
        });
    </script>
    <div class="editor-label">
        @Html.LabelFor(model => model.segnalazione.contatto.dataNascita)
        @Html.EditorFor(model => model.segnalazione.contatto.dataNascita)<br />
        @Html.ValidationMessageFor(model => model.segnalazione.contatto.dataNascita)
        <script>
            $("#segnalazione_contatto_dataNascita").datepicker({
                dateFormat: "yy-mm-dd",
                changeMonth: true,
                changeYear: true,
                yearRange: "1940:2012",

            });
        </script>
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.segnalazione.contatto.codiceFiscale)
        @Html.EditorFor(model => model.segnalazione.contatto.codiceFiscale)<br />
        @Html.ValidationMessageFor(model => model.segnalazione.contatto.codiceFiscale)
    </div>
    <script>
        $("#segnalazione_contatto_codiceFiscale").focusout(function () {
            ricercaContatto();
        });
    </script>

   
       
    foreach (var eSesso in Enum.GetValues(typeof(mediatori.Models.Anagrafiche.EnumSesso)))
    {
        <div class="editor-label">

            @Html.Label(eSesso.ToString())
            @Html.RadioButtonFor(model => model.segnalazione.contatto.sesso, eSesso)<br />
            @Html.ValidationMessageFor(model => model.segnalazione.contatto.sesso)
        </div>
    }
      
    <div id="grigliaContattiDuplicati"></div>
    <script>$("#grigliaContattiDuplicati").hide(0);</script>
    
     <!-- impiego -->
    <h3>Dati impiego</h3>
    <hr />
    using (Html.BeginCollectionItem("impieghi"))
    {
        foreach (mediatori.Models.Anagrafiche.Impiego i in Model.impieghi)
        {
            Html.RenderAction("impiegoPartial", "Impiego", new { impiego = i, tipoAzione = "INSERIMENTO" });
        }

    }


    <h3>Importi</h3>
    <hr />
    
   <div class="editor-label">
        @Html.LabelFor(model => model.segnalazione.importoRichiesto)
        @Html.EditorFor(model => model.segnalazione.importoRichiesto)<br />
        @Html.ValidationMessageFor(model => model.segnalazione.importoRichiesto)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.segnalazione.durataRichiesta)
        @Html.TextBoxFor(m => m.segnalazione.durataRichiesta)<br />
        @Html.ValidationMessageFor(model => model.segnalazione.durataRichiesta)
    </div>
    <div class="editor-label">
        @Html.LabelFor(m => m.segnalazione.rataRichiesta)
        @Html.EditorFor(m => m.segnalazione.rataRichiesta)<br />
        @Html.ValidationMessageFor(m => m.segnalazione.rataRichiesta)
    </div>
    <div class="editor-label">
        @Html.LabelFor(m => m.segnalazione.altroPrestito)
        @Html.DropDownListFor(m => m.segnalazione.altroPrestito.id, (IEnumerable<SelectListItem>)ViewBag.listaTipoPrestito, "")<br />
        @Html.ValidationMessageFor(m => m.segnalazione.altroPrestito.id)
    </div>
    <div class="editor-label">
        @Html.LabelFor(m => m.segnalazione.prodottoRichiesto)
        @Html.DropDownListFor(m => m.segnalazione.prodottoRichiesto.id, (IEnumerable<SelectListItem>)ViewBag.listaProdotti, "")<br />
        @Html.ValidationMessageFor(m => m.segnalazione.prodottoRichiesto.id)
    </div>
    <h3>Dati Campagna</h3>
    <hr />
    <div class="editor-label">
        @Html.LabelFor(model => model.segnalazione.fontePubblicitaria)
        @Html.DropDownListFor(m => m.segnalazione.fontePubblicitaria.id, (IEnumerable<SelectListItem>)ViewBag.listaFontePubblicitaria, "")<br />
        @Html.ValidationMessageFor(model => model.segnalazione.fontePubblicitaria)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.segnalazione.canaleAcquisizione)
        @Html.DropDownListFor(m => m.segnalazione.canaleAcquisizione.id, (IEnumerable<SelectListItem>)ViewBag.listaTipoCanaleAcquisizione, "")<br />
        @Html.ValidationMessageFor(model => model.segnalazione.fontePubblicitaria)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.segnalazione.tipoLuogoRitrovo)
        @Html.DropDownListFor(m => m.segnalazione.tipoLuogoRitrovo.id, (IEnumerable<SelectListItem>)ViewBag.listaTipoLuogoRitrovo, "")<br />
        @Html.ValidationMessageFor(model => model.segnalazione.tipoLuogoRitrovo)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.segnalazione.tipoContatto)
        @Html.DropDownListFor(m => m.segnalazione.tipoContatto.id, (IEnumerable<SelectListItem>)ViewBag.listaTipoContatto, "")<br />
        @Html.ValidationMessageFor(model => model.segnalazione.tipoContatto)
    </div>

     <h3>Riferimenti</h3>
    <hr />
    if (Model.riferimenti != null)
    {
        foreach (mediatori.Models.Anagrafiche.Riferimento riferimenti in Model.riferimenti)
        {
            {
                Html.RenderAction("riferimentoPartial", "Riferimento", new { riferimento = riferimenti, tipoAzione = "INSERIMENTO" });
            }
        }
    }
  
        
     
    <h3>Note</h3>
    <hr />
    if (Model.segnalazione.note != null)
    {
        foreach (mediatori.Models.Nota nota in Model.note)
        {
            {
                Html.RenderAction("notaPartial", "Nota", new { riferimento = nota, tipoAzione = "INSERIMENTO" });
            }
        }
    }
      
    <p>
        <input type="submit" value="Nuovo" id="Nuovo"  />
    </p>

}   

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    $(function () {

        $("#Nuovo").click(function () {

            refreshValidation("createForm");
            if ($("Form").validate().form() && validateForm()) {
                $("Form").submit();
            }
        });
    });

    function validateForm() {
        if ($("#dataNascita").val() == "01/01/0001 00:00:00") {
            $("[data-valmsg-for='dataNascita'").html("Il campo data di nascita e' obbligatorio!")
            return false;
        }
        return true;
    }

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("/Scripts/Segnalazioni/Create.js")
}
